events {
    worker_connections  1024;
}
include envs-local.conf;

http {
    lua_package_path "/usr/local/lib/lua/?.lua;;";

    lua_shared_dict token_issuers 60m; 
    # dictionary cache by nginx
    include          mime.types;
    default_type     application/octet-stream;
    resolver         @HTTP_RESOLVER@;

    init_by_lua '
        json = require "cjson"
    ';

    # The log message format to use
    log_format log_json
        '{'
            '"timestamp": "$time_iso8601",'
            '"request_time": $request_time,'
            '"remote_addr": "$remote_addr",'
            '"x_forwarded_for": "$http_x_forwarded_for",'
            '"vhost": "$server_name",'
            '"method": "$request_method",'
            '"uri": "$uri",'
            '"query_parameters": "$query_string",'
            '"protocol": "$server_protocol",'
            '"status": $status,'
            '"bytes_sent": $body_bytes_sent,'
            '"request_length": $request_length,'
            '"request_id": "$request_id",'
            '"referer": "$http_referer",'
            '"user_agent": "$http_user_agent",'
            '"user_id": $user_id,'
            '"duration": $duration'
        '}';

    server {
        # Default values for the metadata we are interested in
        set $duration -1;
        set $metadata '';
        set $user_id 0;


        listen 8080;
        # Configure how and where to log requests
        access_log /usr/local/openresty/nginx/logs/access.log log_json;  

        lua_code_cache off;
        include local.conf;
    }
}